# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BzqHMd7nk_Wkjhb2HgRGzsK6nZdzbfBI
"""

a = {"B":4,"E":5}
b = {"A":4,"C":2,"F":6}
c = {"B":2,"D":7,"E":1}
d = {"C":7,"F":3}
e = {"A":5,"C":1,"F":3}
f = {"B":6,"D":3,"E":3}

voisin = {
    "A":a,
    "B":b,
    "C":c,
    "D":d,
    "E":e,
    "F":f
    }

def IsKeyResult(keyResults, key):
  for k in keyResults:
      if key == k:
        return False
  return True

def IsNewKey(newKey, key):
  for k in newKey:
      if key == k:
        return False
  return True

def Minimum(line, mini):
  for k,m in line.items():
     if m < mini[1] and IsKeyResult(keyResult, k):
        mini = [k,m]
  return mini

def FindKey(line, val):
  for k,m in line.items():
    if m == val:
      return k

def SortKey(line):
  res = {}
  for k in sorted(line.keys()):
    res.update({k:line[k]})
  return res

def CalculateDistance(line, keyResults, newKey, value):
  for k,m in voisin[currentKey].items():    
    if IsKeyResult(keyResults, k):
      if IsNewKey(newKey, k):
        line.update({k:value + m})
        newKey += [k]
      elif line[k] > value + m:
        line.update({k:value + m})
  return line, newKey

for key in voisin.keys():
  result = {key:0}
  newKeys = [key]
  currentKey = key
  currentValue = 0
  currentLine = {}
  keyResult = [key]
  minimum = []
  for loop in range(len(voisin) - 1):
    currentLine, newKey = CalculateDistance(currentLine, keyResult, newKeys, currentValue)
    maxValue = max(currentLine.values())
    maxKey = FindKey(currentLine, maxValue)
    maximum = [maxKey, maxValue]
    minimum = Minimum(currentLine, maximum)
    result.update({minimum[0]:minimum[1]})
    currentKey = minimum[0]
    keyResult += [minimum[0]]
    currentValue = minimum[1]

  result = SortKey(result)
  print("table de routage de", key)
  print("_________________________")
  print("|Destination|  MÃ©trique |")
  print("|-----------|-----------|")
  for k,m in result.items():
    if len(str(m)) == 1:
      print("|    ",k,"    |    ",m,"    |")
    elif len(str(m)) == 2:
      print("|    ",k,"    |    ",m,"   |")
  print("_________________________","\n")